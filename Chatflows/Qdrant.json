{"id":"317b2714-c83e-4cd4-ae86-db6dd2022aec","name":"Qdrant","data":{"edges":[],"nodes":[{"data":{"type":"Qdrant","node":{"template":{"_type":"Component","embedding":{"trace_as_metadata":true,"list":false,"required":false,"placeholder":"","show":true,"value":"","name":"embedding","display_name":"Embedding","advanced":false,"input_types":["Embeddings"],"dynamic":false,"info":"","title_case":false,"type":"other"},"ingest_data":{"trace_as_input":true,"trace_as_metadata":true,"list":true,"required":false,"placeholder":"","show":true,"value":"","name":"ingest_data","display_name":"Ingest Data","advanced":false,"input_types":["Data"],"dynamic":false,"info":"","title_case":false,"type":"other"},"api_key":{"load_from_db":false,"required":false,"placeholder":"","show":true,"value":"","name":"api_key","display_name":"API Key","advanced":true,"input_types":[],"dynamic":false,"info":"","title_case":false,"password":true,"type":"str"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import List\n\nfrom langchain_community.vectorstores import Qdrant\n\nfrom langflow.base.vectorstores.model import LCVectorStoreComponent\nfrom langflow.helpers.data import docs_to_data\nfrom langflow.io import (\n    DropdownInput,\n    HandleInput,\n    IntInput,\n    StrInput,\n    SecretStrInput,\n    DataInput,\n    MultilineInput,\n)\n\nfrom langflow.schema import Data\n\n\nclass QdrantVectorStoreComponent(LCVectorStoreComponent):\n    display_name = \"Qdrant with vectorsearch\"\n    description = \"Qdrant Vector Store with search capabilities\"\n    documentation = \"<link url='https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/qdrant'>Webpage description not available.</link>\"\n    icon = \"Qdrant\"\n\n    inputs = [\n        StrInput(name=\"collection_name\", display_name=\"Collection Name\", required=True),\n        StrInput(name=\"host\", display_name=\"Host\", value=\"localhost\", advanced=True),\n        IntInput(name=\"port\", display_name=\"Port\", value=6333, advanced=True),\n        IntInput(name=\"grpc_port\", display_name=\"gRPC Port\", value=6334, advanced=True),\n        SecretStrInput(name=\"api_key\", display_name=\"API Key\", advanced=True),\n        StrInput(name=\"prefix\", display_name=\"Prefix\", advanced=True),\n        IntInput(name=\"timeout\", display_name=\"Timeout\", advanced=True),\n        StrInput(name=\"path\", display_name=\"Path\", advanced=True),\n        StrInput(name=\"url\", display_name=\"URL\", advanced=True),\n        DropdownInput(\n            name=\"distance_func\",\n            display_name=\"Distance Function\",\n            options=[\"Cosine\", \"Euclidean\", \"Dot Product\"],\n            value=\"Cosine\",\n            advanced=True,\n        ),\n        StrInput(name=\"content_payload_key\", display_name=\"Content Payload Key\", value=\"page_content\", advanced=True),\n        StrInput(name=\"metadata_payload_key\", display_name=\"Metadata Payload Key\", value=\"metadata\", advanced=True),\n        MultilineInput(name=\"search_query\", display_name=\"Search Query\"),\n        DataInput(\n            name=\"ingest_data\",\n            display_name=\"Ingest Data\",\n            is_list=True,\n        ),\n        HandleInput(name=\"embedding\", display_name=\"Embedding\", input_types=[\"Embeddings\"]),\n        IntInput(\n            name=\"number_of_results\",\n            display_name=\"Number of Results\",\n            info=\"Number of results to return.\",\n            value=4,\n            advanced=True,\n        ),\n    ]\n\n    def build_vector_store(self) -> Qdrant:\n        return self._build_qdrant()\n\n    def _build_qdrant(self) -> Qdrant:\n        qdrant_kwargs = {\n            \"collection_name\": self.collection_name,\n            \"content_payload_key\": self.content_payload_key,\n            \"metadata_payload_key\": self.metadata_payload_key,\n        }\n\n        server_kwargs = {\n            \"host\": self.host if self.host else None,\n            \"port\": int(self.port),  # Ensure port is an integer\n            \"grpc_port\": int(self.grpc_port),  # Ensure grpc_port is an integer\n            \"api_key\": self.api_key,\n            \"prefix\": self.prefix,\n            \"timeout\": int(self.timeout) if self.timeout else None,  # Ensure timeout is an integer\n            \"path\": self.path if self.path else None,\n            \"url\": self.url if self.url else None,\n        }\n\n        server_kwargs = {k: v for k, v in server_kwargs.items() if v is not None}\n        documents = []\n\n        for _input in self.ingest_data or []:\n            if isinstance(_input, Data):\n                documents.append(_input.to_lc_document())\n            else:\n                documents.append(_input)\n\n        from langchain.embeddings.base import Embeddings  # Ensure this import is correct\n        embedding = self.embedding\n        if not isinstance(embedding, Embeddings):\n            raise ValueError(\"Invalid embedding object\")\n\n        if documents:\n            qdrant = Qdrant.from_documents(documents, embedding=embedding, **qdrant_kwargs)\n        else:\n            from qdrant_client import QdrantClient\n\n            client = QdrantClient(**server_kwargs)\n            qdrant = Qdrant(embeddings=embedding.embed_query, client=client, **qdrant_kwargs)\n\n        return qdrant\n\n    def search_documents(self) -> List[Data]:\n        vector_store = self._build_qdrant()\n\n        if self.search_query and isinstance(self.search_query, str) and self.search_query.strip():\n            docs = vector_store.similarity_search(\n                query=self.search_query,\n                k=self.number_of_results,\n            )\n\n            data = docs_to_data(docs)\n            self.status = data\n            return data\n        else:\n            return []","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"collection_name":{"trace_as_metadata":true,"load_from_db":false,"list":false,"required":true,"placeholder":"","show":true,"value":"cnaesbr","name":"collection_name","display_name":"Collection Name","advanced":false,"dynamic":false,"info":"","title_case":false,"type":"str"},"content_payload_key":{"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"page_content","name":"content_payload_key","display_name":"Content Payload Key","advanced":true,"dynamic":false,"info":"","title_case":false,"type":"str"},"distance_func":{"trace_as_metadata":true,"options":["Cosine","Euclidean","Dot Product"],"required":false,"placeholder":"","show":true,"value":"Cosine","name":"distance_func","display_name":"Distance Function","advanced":true,"dynamic":false,"info":"","title_case":false,"type":"str"},"grpc_port":{"trace_as_metadata":true,"list":false,"required":false,"placeholder":"","show":true,"value":6334,"name":"grpc_port","display_name":"gRPC Port","advanced":true,"dynamic":false,"info":"","title_case":false,"type":"int"},"host":{"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"localhost","name":"host","display_name":"Host","advanced":true,"dynamic":false,"info":"","title_case":false,"type":"str"},"metadata_payload_key":{"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"metadata","name":"metadata_payload_key","display_name":"Metadata Payload Key","advanced":true,"dynamic":false,"info":"","title_case":false,"type":"str"},"number_of_results":{"trace_as_metadata":true,"list":false,"required":false,"placeholder":"","show":true,"value":4,"name":"number_of_results","display_name":"Number of Results","advanced":true,"dynamic":false,"info":"Number of results to return.","title_case":false,"type":"int"},"path":{"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"","name":"path","display_name":"Path","advanced":true,"dynamic":false,"info":"","title_case":false,"type":"str"},"port":{"trace_as_metadata":true,"list":false,"required":false,"placeholder":"","show":true,"value":6333,"name":"port","display_name":"Port","advanced":true,"dynamic":false,"info":"","title_case":false,"type":"int"},"prefix":{"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"","name":"prefix","display_name":"Prefix","advanced":true,"dynamic":false,"info":"","title_case":false,"type":"str"},"search_query":{"trace_as_input":true,"multiline":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"","name":"search_query","display_name":"Search Query","advanced":false,"input_types":["Message"],"dynamic":false,"info":"","title_case":false,"type":"str"},"timeout":{"trace_as_metadata":true,"list":false,"required":false,"placeholder":"","show":true,"value":"","name":"timeout","display_name":"Timeout","advanced":true,"dynamic":false,"info":"","title_case":false,"type":"int"},"url":{"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"","name":"url","display_name":"URL","advanced":true,"dynamic":false,"info":"","title_case":false,"type":"str"}},"description":"Qdrant Vector Store with search capabilities","icon":"Qdrant","base_classes":["Data","Retriever"],"display_name":"Qdrant","documentation":"<link url='https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/qdrant'>Webpage description not available.</link>","custom_fields":{},"output_types":[],"pinned":false,"conditional_paths":[],"frozen":false,"outputs":[{"types":["Retriever"],"selected":"Retriever","name":"base_retriever","display_name":"Retriever","method":"build_base_retriever","value":"__UNDEFINED__","cache":true},{"types":["Data"],"selected":"Data","name":"search_results","display_name":"Search Results","method":"search_documents","value":"__UNDEFINED__","cache":true}],"field_order":["collection_name","host","port","grpc_port","api_key","prefix","timeout","path","url","distance_func","content_payload_key","metadata_payload_key","search_query","ingest_data","embedding","number_of_results"],"beta":false,"edited":true,"official":false},"id":"Qdrant-Y24Tl","description":"Qdrant Vector Store with search capabilities","display_name":"Qdrant"},"id":"Qdrant-Y24Tl","position":{"x":0,"y":0},"type":"genericNode"}],"viewport":{"x":1,"y":1,"zoom":1}},"is_component":true}